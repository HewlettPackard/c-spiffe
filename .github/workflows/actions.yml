name: Build and run tests

on: push

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    container:
      image: willallves/grpc-build:1.34.0
    steps:
      - name: Checkout Project
        uses: actions/checkout@v1

      - name: Set env.BRANCH
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV


      - name: Log the parent container ubuntu version
        run: lsb_release -a

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build & push gRPC Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .docker/test.Dockerfile
          outputs: type=docker,dest=/tmp/gRPCimage.tar
          tag: grpc-build:${{ env.BRANCH }}
      - name: Upload gRPCDockerImage
        uses: actions/upload-artifact@v2
        with:
          name: gRPCimage.tar
          path: /tmp/gRPCimage.tar

      - name: Build & push workload Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .infra/workload/Dockerfile
          outputs: type=docker,dest=/tmp/workloadimage.tar
          tag: worload:${{ env.BRANCH }}
      - name: Upload workloadDockerImage
        uses: actions/upload-artifact@v2
        with:
          name: workloadimage.tar
          path: /tmp/workloadimage.tar
      
      - name: Build & push test Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .infra/tests/Dockerfile
          outputs: type=docker,dest=/tmp/testimage.tar
          tag: tests:${{ env.BRANCH }}
      - name: Upload testDockerImage
        uses: actions/upload-artifact@v2
        with:
          name: testdimage.tar
          path: /tmp/testimage.tar

      - name: Create Build Environment
        shell: bash
        run: mkdir build

      - name: Configure CMake
        shell: bash
        run: cd build && cmake ..

      - name: Build
        shell: bash
        run:  cd build && make

      - name: Unit Testing
        shell: bash
        run: cd build && make test

      - name: Coverage Test
        shell: bash
        run: cd build && make gcov && make lcov && lcov --list Coverage/lcov.info > coverage

      - name: Integration Test
        shell: bash
        run: cd infra && make integration-tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          verbose: true
          file: build/Coverage/lcov.info

      - name: Lines Coverage Verify
        shell: bash
        run: cd build && target=60.9;lines=`awk '{print substr($1, 8, 4)}' coverage | tail -1`;if { echo $lines; echo $target ; } | sort -hu -c 2>/dev/null; then echo "This coverage is less than threshold"; exit 1; fi

      - name: Functions Coverage Verify
        shell: bash
        run: cd build && target=60.9;functions=`awk '{print substr($2, 6, 4)}' coverage | tail -1`;if { echo $functions; echo $target ; } | sort -hu -c 2>/dev/null; then echo "This coverage is less than threshold"; exit 1; fi

      - name: Generate documentation
        uses: mattnotmitt/doxygen-action@v1
        with:
            working-directory: '.'
            doxyfile-path: 'docs/Doxyfile'

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/html
  push-containers:
    if:  ${{ secrets.DOCKERHUB_USERNAME != null &&  secrets.DOCKERHUB_TOKEN != null}}
    runs-on: ubuntu-latest
    container:
      image: willallves/grpc-build:1.34.0
    needs: build-and-tests
    steps:
     - name: Checkout Project
       uses: actions/checkout@v1
     - name: Set env.BRANCH
       run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
     - name: Login to DockerHub
       uses: docker/login-action@v1
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Download gRPC image
       uses: actions/download-artifact@v2
       with:
         name: gRPCimage.tar
         path: /tmp
     - name: Load gRPC image
       run: |
         docker load --input /tmp/gRPCimage.tar
     - name: Push gRPC image
       run: |
         docker push  ${{ secrets.DOCKERHUB_USERNAME }}/grpc-build:$BRANCH

     - name: Download workload image
       uses: actions/download-artifact@v2
       with:
         name: workloadimage.tar
         path: /tmp
     - name: Load workload image
       run: |
         docker load --input /tmp/workloadimage.tar
     - name: Push workload image
       run: |
         docker push  ${{ secrets.DOCKERHUB_USERNAME }}/workload:$BRANCH

     - name: Download test image
       uses: actions/download-artifact@v2
       with:
         name: testimage.tar
         path: /tmp
     - name: Load workload image
       run: |
         docker load --input /tmp/testimage.tar
     - name: Push workload image
       run: |
         docker push  ${{ secrets.DOCKERHUB_USERNAME }}/tests:$BRANCH
     
        

